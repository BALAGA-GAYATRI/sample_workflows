# This is a basic workflow to help you get started with Actions

name: issue_dashboard

# Controls when the action will run. 
on: [workflow_dispatch]


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: 'Generate Dashboard'
      id: dashboard
      uses: ethomson/issue-dashboard@v1
      with:
        config: |
          title: 'Dashboard'
          output:
            format: markdown
            filename: 'dashboard.md'
          sections:
          - title: 'issues'
            widgets:
            - type: 'number'
              title: 'az login'
              issue_query: 'repo:Azure/login is:open is:issue created:>{{ date("-365 days") }}'
              color: 'green'
            - type: 'number'
              title: 'webapps-deploy'
              issue_query: 'repo:Azure/webapps-deploy is:open is:issue created:>{{ date("-365 days") }}'
              color: 'green'
            - type: 'number'
              title: 'aci-deploy'
              issue_query: 'repo:Azure/aci-deploy is:open is:issue created:>{{ date("-365 days") }}'
              color: 'green'
            - type: 'number'
              title: 'functions-action'
              issue_query: 'repo:Azure/functions-action is:open is:issue created:>{{ date("-365 days") }}'
              color: 'green'
            - type: number 
              script: | 
                const repo1 = 'Azure/login' 
                const repo2 = 'Azure/webapps-deploy' 
                const repo3 = 'Azure/aci-deploy'
                const repo4 = 'functions-action' 
                const results = await github.search.issuesAndPullRequests(
                { q: `repo:${repo1} repo:${repo2} repo:${repo3} repo:${repo4} is:pr is:open created:<${date('-365 day')}`}
                ) 
                const count = results.data.total_count 
                const title = 'total issues' 
                const color = (count > 10) ? 'red' : 'green' 
                return { value: count, title: title, color: color }
        token: ${{ github.token }}

    - name: Commit files
      id: commit
      run: |
        git config --local user.email "balaga-gayatri@github.com"
        git config --local user.name "balaga-gayatri"
        git add --all
        if [-z "$(git status --porcelain)"]; then
           echo "::set-output name=push::false"
        else
           git commit -m "Add changes" -a
           echo "::set-output name=push::true"
        fi
      shell: bash
 
    - name: Push changes
      if: steps.commit.outputs.push == 'true'
      uses: ad-m/github-push-action@master
      with:
         github_token: ${{ secrets.GITHUB_TOKEN }}

